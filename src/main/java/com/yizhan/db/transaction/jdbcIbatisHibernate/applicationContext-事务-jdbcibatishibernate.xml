<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd

		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.gjt.mm.mysql.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="1" />
<!-- 		<property name="defaultAutoCommit">false</property> -->
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>   

	<tx:annotation-driven transaction-manager="txManager"/>
	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:SqlMapConfig.xml</value>
		</property>
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<bean id="ibatisDao" class="com.demo.事务.jdbcIbatisHibernate.IbatisDao">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient" />
		</property>
	</bean>
	<bean id="sysAdminService" class="com.demo.事务.jdbcIbatisHibernate.SysAdminServiceImpl">
	  	<property name="ibatisDao" ref="ibatisDao"/>
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
		<property name="hibernateDaoImpl" ref="hibernateDaoImpl"/>
	</bean>
	<!-- 配置sessionFactory, 注意这里引入的包的不同  -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="mappingResources">
			<list>
				<value>com/asiainfo/事务/jdbcIbatisHibernate/hibernate/SysAdmin.xml</value>
			</list>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>	
	<bean id="hibernateDaoImpl"  class="com.demo.事务.jdbcIbatisHibernate.hibernate.HibernateDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 使用该管理器可以将JDBCTEMPLATE\IBATIS\HIBERNATE事务共享起来，但是必须要将datasource也注入 -->
	 <bean id="txManager"  class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
<!-- 		<property name="dataSource" ref="dataSource"/> -->
	</bean>
	<bean id="txManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  	<property name="dataSource" ref="dataSource"/>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.demo.事务.jdbcIbatisHibernate.SysAdminServiceImpl.updateAndDel(..))"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="txManager" >
		<tx:attributes>
<!-- 			<tx:method name="save2*" propagation="REQUIRED"/> -->
<!-- 			<tx:method name="save*" propagation="REQUIRED"/> -->
			<tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true"/>
			<tx:method name="del*" propagation="REQUIRES_NEW" rollback-for="Exception"/>

			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>	
	
</beans>
